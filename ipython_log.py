# IPython log file

get_ipython().magic(u'paste')
get_ipython().magic(u'paste')
get_ipython().magic(u'paste')
data
plot(data.T)
get_ipython().magic(u'pylab')
plot(data.T)
plot(data)
data.shape
plot(data[:600000,:])
get_ipython().magic(u'paste')
x = isft(stft(data[:,0].squeeze(),44100,0.01,0.01),44100,data.shape[0]/44100)
x = istft(stft(data[:,0].squeeze(),44100,0.01,0.01),44100,data.shape[0]/44100)
x = istft(stft(data[:,0].squeeze(),44100,0.01,0.01),44100,data.shape[0]/44100,0.01)
x
plot(x[:60000])
plot(x[:600000])
plot(data[0,:600000])
plot(x[:600000])
plot(x[:600000]-data[0,:600000])
plot(x[:600000]-data[0,:600000])
plot(data[0,:600000])
plot(data[:600000,0])
plot(x[:600000])
get_ipython().magic(u'paste')
x = istft(stft(data[:,0].squeeze())
)
x
plot(data[:600000,0])
plot(x[:600000])
plot(data[:600000,0]-x[:600000])
x = stft(data[:,0].squeeze())
x
x.shape
imshow(np.abs(x),interpolation='nearest',aspect='auto',origin='lower')
imshow(np.log(np.abs(x)),interpolation='nearest',aspect='auto',origin='lower')
imshow(np.log(np.abs(x)).T,interpolation='nearest',aspect='auto',origin='lower')
imshow(np.log(np.abs(x[:,:350])).T,interpolation='nearest',aspect='auto',origin='lower')
imshow(np.log(np.abs(x[:,:350])).T,interpolation='nearest',aspect='auto',origin='lower')
hist(x[:,350],100)
hist(np.log(np.abs(x[:,350])),100)
hist(np.log(np.abs(x.flatten())),100)
imshow(np.log(np.abs(x[:,:350])).T,interpolation='nearest',aspect='auto',origin='lower',vmin=-3)
imshow(np.log(np.abs(x[:,:350])).T,interpolation='nearest',aspect='auto',origin='lower',vmin=-3,vmax=2)
imshow(np.log(np.abs(x[:,:350])).T,interpolation='nearest',aspect='auto',origin='lower',vmin=-3,vmax=3)
plot(np.log(np.abs(x[:,:])).mean(axis=0))
imshow(np.log(np.abs(x[:,:350])).T-np.log(np.abs(x[:,:])).mean(axis=0),interpolation='nearest',aspect='auto',origin='lower',vmin=-3,vmax=3)
imshow(np.log(np.abs(x[:,:])).T-np.log(np.abs(x[:,:])).mean(axis=0),interpolation='nearest',aspect='auto',origin='lower',vmin=-3,vmax=3)
imshow(np.log(np.abs(x[:,:])).T-np.log(np.abs(x[:,:])).mean(axis=0,keepdims=True),interpolation='nearest',aspect='auto',origin='lower',vmin=-3,vmax=3)
imshow(np.log(np.abs(x[:,:])).T-np.log(np.abs(x[:,:])).mean(axis=0,keepdims=True).T,interpolation='nearest',aspect='auto',origin='lower',vmin=-3,vmax=3)
imshow(np.log(np.abs(x[:,:])).T-np.log(np.abs(x[:,:])).mean(axis=0,keepdims=True).T,interpolation='nearest',aspect='auto',origin='lower')
colorbar()
imshow(np.log(np.abs(x[:,:])).T-np.log(np.abs(x[:,:])).mean(axis=0,keepdims=True).T,interpolation='nearest',aspect='auto',origin='lower',vmin=-2.5,vmax=2.5)
ax = _
ax = plt.subplot(121)
imshow(np.log(np.abs(x[:,:])).T-np.log(np.abs(x[:,:])).mean(axis=0,keepdims=True).T,interpolation='nearest',aspect='auto',origin='lower',vmin=-2.5,vmax=2.5)
ax2 = plt.subplot(122,sharex=ax,sharey=ax)
imshow(np.sin(np.angle(x[:,:])).T,interpolation='nearest',aspect='auto',origin='lower',vmin=-2.5,vmax=2.5)
imshow(np.sin(np.angle(x[:,:])).T,interpolation='nearest',aspect='auto',origin='lower')
imshow(np.sin(np.angle(x[:,:-1])-np.angle(x[:,1:])).T,interpolation='nearest',aspect='auto',origin='lower')
scatter(np.angle(x[100,:-1]),np.angle(x[100,1:]))
scatter(np.angle(x[2000,:-1]),np.angle(x[200,1:]))
scatter(np.angle(x[200,:-1]),np.angle(x[200,1:]))
scatter(np.angle(x[10,:-1]),np.angle(x[10,1:]))
scatter(np.angle(x[11,:-1]),np.angle(x[11,1:]))
scatter(np.angle(x[11,:-1]),np.angle(x[11,1:]))
scatter(np.angle(x[10,:-1]),np.angle(x[10,1:]))
scatter(np.angle(x[10,:-1]),np.angle(x[10,1:]))
scatter(np.angle(x[11,:-1]),np.angle(x[11,1:]),color='red')
scatter(np.angle(x[21,:-1]),np.angle(x[21,1:]),color='green')
x = stft(data[:,0].squeeze(),overlap=0)
x = stft(data[:,0].squeeze(),overlap=1)
scatter(np.angle(x[21,:-1]),np.angle(x[21,1:]),color='green')
scatter(np.angle(x[21,:-1]),np.angle(x[21,1:]),color='green')
scatter(np.angle(x[21,:-1]),(np.angle(x[21,1:])+np.pi)%2*.np.i,color='green')
scatter(np.angle(x[21,:-1]),(np.angle(x[21,1:])+np.pi)%2*np.i,color='green')
scatter(np.angle(x[21,:-1]),(np.angle(x[21,1:])+np.pi)%2*np.pi,color='green')
scatter(np.angle(x[21,:-1]),(np.angle(x[21,1:])+np.pi)%2*np.pi,color='green')
scatter(np.angle(x[21,:-1]),np.angle(x[21,1:]),color='green')
scatter(np.angle(x[21,:-1]),(np.angle(x[21,1:])+np.pi),color='green')
scatter(np.angle(x[21,:-1]),np.angle(x[21,1:]),color='green')
scatter(np.angle(x[21,:-1]),(np.angle(x[21,1:])+np.pi),color='red')
scatter(np.angle(x[21,:-1]),(np.angle(x[21,1:])+2*np.pi),color='red')
scatter(np.angle(x[21,:-1]),np.angle(x[21,1:]),color='green')
scatter(np.sin(np.angle(x[21,:-1])),np.sin(np.angle(x[21,1:])),color='green')
scatter(np.sin(np.angle(x[21,:-1])),np.sin(np.angle(x[21,1:])),color='green')
scatter(np.sin(np.angle(x[21,:-1])),np.cos(np.angle(x[21,1:])),color='green')
scatter(np.sin(np.angle(x[21,:-1])),np.cos(np.angle(x[21,1:])),color='green')
scatter(np.angle(x[21,:-1]),np.angle(x[21,1:]),color='green')
hist(np.angle(x[21,:-1])-np.angle(x[21,1:]),100)
hist((np.angle(x[21,:-1])-np.angle(x[21,1:]))%np.pi*2,100)
scatter(np.angle(x[21,:-1]),np.angle(x[21,1:]),color='green')
scatter(np.angle(x[21,:-1]),np.angle(x[21,:-1])-np.pi,color='green')
scatter(np.angle(x[21,:-1]),np.angle(x[21,:-1])-np.pi,color='red')
scatter(np.angle(x[21,:-1]),np.angle(x[21,:-1])-np.pi,color='red')
scatter(np.angle(x[21,:-1]),np.angle(x[21,1:]),color='green')
scatter(np.angle(x[21,:-1]),((np.angle(x[21,:-1])+np.pi)%2*np.pi)-np.pi,color='red')
scatter(np.angle(x[21,:-1]),((np.angle(x[21,:-1])+np.pi)%2*np.pi)-np.pi,color='red')
scatter(np.angle(x[21,:-1]),((np.angle(x[21,:-1])-np.pi)%2*np.pi)-np.pi,color='red')
scatter(np.angle(x[21,:-1]),((np.angle(x[21,:-1])-np.pi)%(2*np.pi))-np.pi,color='red')
scatter(np.angle(x[21,:-1]),((np.angle(x[21,:-1])+np.pi)%(2.*np.pi))-np.pi,color='red')
scatter(np.angle(x[21,:-1]),((np.angle(x[21,:-1])+2*np.pi)%(2.*np.pi))-np.pi,color='red')
scatter(np.angle(x[21,:-1]),((np.angle(x[21,:-1])+2*np.pi)%(2.*np.pi))-np.pi,color='red')
scatter(np.angle(x[21,:-1]),np.angle(x[21,1:]),color='green')
scatter(np.angle(x[21,:-1]),np.angle(x[21,1:]),color='green')
scatter(np.angle(x[21,:-1]),((2*np.angle(x[21,:-1])+np.pi)%(2.*np.pi))-np.pi,color='red')
scatter(np.angle(x[21,:-1]),((2*np.angle(x[21,:-1])+np.pi)%(2.*np.pi))-np.pi,color='red')
scatter(np.angle(x[21,:-1]),np.angle(x[21,1:]),color='green')
scatter(np.angle(x[21,:-1]),((2*np.angle(x[21,:-1])+np.pi)%(2.*np.pi))-np.pi,color='red')
scatter(np.angle(x[21,:-1]),((np.angle(x[21,:-1])+2*np.pi)%(2.*np.pi))-np.pi,color='red')
scatter(np.angle(x[21,:-1]),np.angle(x[21,1:]),color='green')
scatter(np.angle(x[21,:-1]),((np.angle(x[21,:-1])+2*np.pi-np.angle(x[21,1:]))%(2.*np.pi))-np.pi,color='red')
scatter(np.angle(x[21,:-1]),((np.angle(x[21,:-1])+2*np.pi-np.angle(x[21,1:]))%(2.*np.pi))-np.pi,color='red')
hist(((np.angle(x[21,:-1])+2*np.pi-np.angle(x[21,1:]))%(2.*np.pi))-np.pi,100)
hist(((np.angle(x[210,:-1])+2*np.pi-np.angle(x[210,1:]))%(2.*np.pi))-np.pi,100)
imshow((((np.angle(x[:,:-1])+2*np.pi-np.angle(x[:,1:]))%(2.*np.pi))-np.pi).T,interpolation='nearest',aspect='auto',origin='lower')
imshow((((np.angle(x[:,:-1])+2*np.pi-np.angle(x[:,1:]))%(2.*np.pi))-np.pi).T,interpolation='nearest',aspect='auto',origin='lower',vmin=-0.5,vmax=0.5)
imshow((((np.angle(x[:,:-1])+2*np.pi-np.angle(x[:,1:]))%(2.*np.pi))-np.pi).T,interpolation='nearest',aspect='auto',origin='lower',vmin=-1.5,vmax=1.5)
plot(((np.angle(x[210,:-1])+2*np.pi-np.angle(x[210,1:]))%(2.*np.pi))-np.pi)
plot(((np.angle(x[21,:-1])+2*np.pi-np.angle(x[21,1:]))%(2.*np.pi))-np.pi)
get_ipython().magic(u'logstart')
